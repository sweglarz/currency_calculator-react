{"version":3,"sources":["Images/background.jpg","globalStyles.js","Form/styled.js","Result/styled.js","Result/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","Images/problem-solved.png","Form/index.js","useCurrencies.js","Header/styled.js","Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","background","FormElement","styled","form","FormFieldset","fieldset","FormParagraph","p","FormLegend","legend","FormSpan","span","FormInput","input","FormButton","button","LoadingText","LoadingSpinner","div","StyledInformationText","ErrorText","ErrorImage","img","ResultElement","Result","result","undefined","className","afterConversion","toFixed","currency","StyledClock","actualDate","date","toLocaleString","weekday","hour","minute","second","day","month","Clock","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","Form","currencyData","state","setCurrencyData","getRates","a","axios","get","myRates","data","rates","setTimeout","useCurrencies","setResult","amount","setAmount","setCurrency","onSubmit","event","preventDefault","rate","calculateResult","src","errorImage","alt","value","onChange","target","type","min","step","required","placeholder","as","Object","keys","map","Title","h1","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8714211b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.e6793f55.jpg\";","import {createGlobalStyle} from \"styled-components\";\r\nimport background from \"./Images/background.jpg\"\r\n\r\nexport const GlobalStyle = createGlobalStyle `\r\nhtml {\r\n    box-sizing: border-box;\r\n    scroll-behavior: smooth;\r\n    font-family: 'Nunito', sans-serif;\r\n  };\r\n  \r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  };\r\n  \r\n  body{\r\n    margin: 0 auto;\r\n    height: 100vh;\r\n    max-width: 1000px;\r\n    padding: 30px;\r\n    background-image: url(\"${background}\");\r\n    background-position: center;\r\n    background-size: cover;\r\n  };\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormElement = styled.form`\r\n    max-width: 700px;\r\n    margin: 0 auto;\r\n`;\r\nexport const FormFieldset = styled.fieldset`\r\n    background-color: rgba(0, 0, 0, 0.700);\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 15px 40px;\r\n`;\r\nexport const FormParagraph = styled.p`\r\n    color: #fff;\r\n`;\r\nexport const FormLegend = styled.legend`\r\n    background-color: #e08e16;\r\n    color: #fff;\r\n    padding: 7px;\r\n    border-radius: 10px;\r\n    font-weight: 700;\r\n`;\r\nexport const FormSpan = styled.span`\r\n    display: inline-block;\r\n    max-width: 200px;\r\n    width: 100%;\r\n`;\r\nexport const FormInput = styled.input`\r\n    max-width: 200px;\r\n    width: 100%;\r\n    padding: 7px;\r\n\r\n    @media(max-width: 550px){\r\n        min-width: 100%;\r\n    };\r\n`;\r\nexport const FormButton = styled.button`\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #e08e16;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 16px;\r\n    margin: 20px 0;\r\n    cursor: pointer;\r\n\r\n    &:hover{\r\n        background-color: #f19f17;\r\n    };\r\n    &:active{\r\n        background-color: #f29f28;\r\n    };\r\n`;\r\nexport const LoadingText = styled.p`\r\n    text-align: center;\r\n    color: #fff;\r\n`;\r\nexport const LoadingSpinner = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    &::after{\r\n        content: \"\";\r\n        width: 60px;\r\n        height: 60px;\r\n        border: 8px solid #ddd;\r\n        border-top-color: #e08e16;\r\n        border-radius: 50%;\r\n        animation: LoadingSpinner 1s linear infinite;\r\n    };\r\n    @keyframes LoadingSpinner {\r\n        to {\r\n            transform: rotate(1turn);\r\n        };\r\n    };\r\n`;\r\nexport const StyledInformationText = styled(LoadingText)`\r\n    font-size: 14px;\r\n    margin: 0;\r\n`;\r\nexport const ErrorText = styled(LoadingText)`\r\n    margin: 0;\r\n    font-size: 18px;\r\n    color: #EA2027;\r\n    font-weight: bold;\r\n    text-shadow: 1px 1px 1px #000;\r\n`;\r\nexport const ErrorImage = styled.img`\r\n    display: block;\r\n    margin: 20px auto;\r\n    width: 64px;\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const ResultElement = styled.p`\r\n    margin-top: 0px;\r\n    margin-bottom: 30px;\r\n    font-size: 18px;\r\n    color: #fff;\r\n`;","import { ResultElement } from \"./styled\";\r\n\r\nconst Result = ({ result }) => (\r\n    <ResultElement>\r\n        Otrzymasz:&nbsp;\r\n        {result !== undefined && (\r\n            <>\r\n                <strong className=\"form__result\">{(result.afterConversion.toFixed(2))}&nbsp;{result.currency}</strong>\r\n            </>\r\n        )}\r\n    </ResultElement>\r\n);\r\n\r\nexport default Result;","import styled from \"styled-components\";\r\n\r\nexport const StyledClock = styled.p`\r\n    font-family: 'Space Mono', monospace;\r\n    color: #fff;\r\n    font-size: 14px;\r\n    text-align: right;\r\n    margin-bottom: 40px;\r\n\r\n    @media (max-width: 550px){\r\n        text-align: center\r\n    };\r\n`;","import { StyledClock } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst actualDate = (date) => `${date.toLocaleString(undefined,\r\n        {\r\n            weekday: \"long\",\r\n            hour: \"2-digit\",\r\n            minute:\"2-digit\",\r\n            second: \"2-digit\",\r\n            day: \"numeric\",\r\n            month: \"long\"\r\n        }\r\n    )}`;\r\n\r\nconst Clock = () => {\r\n    const date = useCurrentDate();\r\n    return (\r\n        <StyledClock>Dzisiaj jest {actualDate(date)}</StyledClock>\r\n    )\r\n};\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n    \r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId)\r\n        }\r\n    }, []);\r\n\r\n    return date;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/problem-solved.f836a67d.png\";","import {\r\n    FormElement,\r\n    FormFieldset,\r\n    FormLegend,\r\n    FormParagraph,\r\n    FormSpan,\r\n    FormInput,\r\n    FormButton,\r\n    LoadingSpinner,\r\n    LoadingText,\r\n    StyledInformationText,\r\n    ErrorText,\r\n    ErrorImage\r\n} from \"./styled\";\r\nimport Result from \"../Result\";\r\nimport Clock from \"../Clock\";\r\nimport { useState } from \"react\";\r\nimport { useCurrencies } from \"../useCurrencies\";\r\nimport errorImage from \"../Images/problem-solved.png\";\r\n\r\nconst Form = () => {\r\n    const currencyData = useCurrencies();\r\n    const [result, setResult] = useState();\r\n    const calculateResult = (amount, currency) => {\r\n        const rate = currencyData.rates[currency];\r\n\r\n        setResult({\r\n            afterConversion: +amount * rate,\r\n            currency,\r\n        });\r\n    };\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [currency, setCurrency] = useState(\"USD\");\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault()\r\n        calculateResult(amount, currency)\r\n    };\r\n\r\n    return (\r\n        <FormElement onSubmit={onFormSubmit}>\r\n            <FormFieldset>\r\n                <FormLegend>\r\n                    Kalkulator Walut\r\n                </FormLegend>\r\n                <Clock />\r\n                {currencyData.state === \"loading\"\r\n                    ? (\r\n                        <>\r\n                            <LoadingText>Daj nam chwilę, poberamy dla Ciebie najświeższe kursy walut &#128521; </LoadingText>\r\n                            <LoadingSpinner></LoadingSpinner>\r\n                        </>\r\n                    )\r\n                    : (currencyData.state === \"error\"\r\n                        ? (\r\n                            <>\r\n                                <ErrorText>Ups... Coś poszło nie tak, spróbuj ponownie później!</ErrorText>\r\n                                <ErrorImage src={errorImage} alt=\"Error\" />\r\n                            </>\r\n                        )\r\n                        : (\r\n                            <>\r\n                                <FormParagraph>\r\n                                    <label>\r\n                                        <FormSpan>\r\n                                            Podaj kwotę w PLN*:\r\n                                        </FormSpan>\r\n                                        <FormInput\r\n                                            value={amount}\r\n                                            onChange={({ target }) => setAmount(target.value)}\r\n                                            type=\"number\"\r\n                                            min=\"1\"\r\n                                            step=\"1\"\r\n                                            required\r\n                                            placeholder=\"Podaj kwotę\" />\r\n                                    </label>\r\n                                </FormParagraph>\r\n                                <FormParagraph>\r\n                                    <label>\r\n                                        <FormSpan>\r\n                                            Wymieniam na:\r\n                                        </FormSpan>\r\n                                        <FormInput\r\n                                            as=\"select\"\r\n                                            value={currency}\r\n                                            onChange={({ target }) => setCurrency(target.value)}\r\n                                        >\r\n                                            {!!currencyData.rates && Object.keys(currencyData.rates).map((currency => (\r\n                                                <option\r\n                                                    key={currency}\r\n                                                    value={currency}\r\n                                                >\r\n                                                    {currency}\r\n                                                </option>\r\n                                            )))}\r\n                                        </FormInput>\r\n                                    </label>\r\n                                </FormParagraph>\r\n                            </>\r\n                        ))\r\n                }\r\n                <FormButton>\r\n                    Przelicz\r\n                </FormButton>\r\n                <Result result={result} />\r\n                <StyledInformationText>Kursy walut pobierane są z Europejskiego Banku Centralnego.</StyledInformationText>\r\n                <StyledInformationText>Aktualne na dzień: <strong>{currencyData.date}</strong></StyledInformationText>\r\n            </FormFieldset>\r\n        </FormElement>\r\n    );\r\n};\r\nexport default Form;","import { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\nexport const useCurrencies = () => {\r\n    const [currencyData, setCurrencyData] = useState({ state: \"loading\" });\r\n\r\n    useEffect(() => {\r\n        const getRates = async () => {\r\n            try {\r\n                const myRates = await axios.get(\"https://api.exchangerate.host/latest?base=PLN\");\r\n                const { rates, date } = await myRates.data;\r\n\r\n                setCurrencyData({\r\n                    state: \"loaded\",\r\n                    rates,\r\n                    date\r\n                });\r\n            }\r\n            catch {\r\n                setCurrencyData({\r\n                    state: \"error\"\r\n                });\r\n            };\r\n        };\r\n        setTimeout(getRates, 2000);\r\n    }, []);\r\n \r\n    return currencyData;\r\n};","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n    color: #fff;\r\n    text-shadow: 3px 3px 3px #000;\r\n`;","import { Title } from \"./styled\";\r\n\r\nconst Header = () => (\r\n    <Title>Internetowy kantor wymiany walut</Title> \r\n);\r\n\r\nexport default Header;","import Form from \"./Form\";\nimport Header from \"./Header\";\n\nfunction App() {\n \n  return (\n    <>\n      <Header />\n      <Form />\n    </>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from \"./globalStyles\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}