{"version":3,"sources":["Images/background.jpg","globalStyles.js","Form/styled.js","Button/styled.js","Button/index.js","Result/styled.js","Result/index.js","Clock/styled.js","Clock/index.js","Clock/useCurrentDate.js","currencies.js","Form/index.js","Header/styled.js","Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","background","FormElement","styled","form","FormFieldset","fieldset","FormParagraph","p","FormLegend","legend","FormSpan","span","FormInput","input","FormSelect","select","FormButton","button","Button","ResultElement","Result","result","undefined","className","afterConversion","toFixed","currency","ClockElement","Clock","date","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","toLocaleString","weekday","hour","minute","second","day","month","useCurrentDate","currencies","summary","name","rate","Form","calculateResult","amount","setAmount","setCurrency","onSubmit","event","preventDefault","value","onChange","target","type","min","step","required","placeholder","map","Title","h1","Header","App","setResult","findRate","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04bdd111.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.e6793f55.jpg\";","import {createGlobalStyle} from \"styled-components\";\r\nimport background from \"./Images/background.jpg\"\r\n\r\nexport const GlobalStyle = createGlobalStyle `\r\nhtml {\r\n    box-sizing: border-box;\r\n    scroll-behavior: smooth;\r\n    font-family: 'Nunito', sans-serif;\r\n  }\r\n  \r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n  \r\n  body{\r\n    margin: 0 auto;\r\n    height: 100vh;\r\n    max-width: 1000px;\r\n    padding: 30px;\r\n    background-image: url(\"${background}\");\r\n    background-position: center;\r\n    background-size: cover;\r\n  }\r\n`\r\n","import styled from \"styled-components\";\r\n\r\nexport const FormElement = styled.form`\r\n    max-width: 700px;\r\n    margin: 0 auto;\r\n`\r\n\r\nexport const FormFieldset = styled.fieldset`\r\n    background-color: rgba(0, 0, 0, 0.700);\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 15px 40px;\r\n`\r\n\r\nexport const FormParagraph = styled.p`\r\n    color: #fff;\r\n`\r\n\r\nexport const FormLegend = styled.legend`\r\n    background-color: #e08e16;\r\n    color: #fff;\r\n    padding: 7px;\r\n    border-radius: 10px;\r\n    font-weight: 700;\r\n`\r\n\r\nexport const FormSpan = styled.span`\r\n    display: inline-block;\r\n    max-width: 200px;\r\n    width: 100%;\r\n`\r\n\r\nexport const FormInput = styled.input`\r\n    max-width: 200px;\r\n    width: 100%;\r\n    padding: 7px;\r\n\r\n    @media(max-width: 550px){\r\n        min-width: 100%;\r\n    }\r\n`\r\n\r\nexport const FormSelect = styled.select`\r\n    max-width: 200px;\r\n    width: 100%;\r\n    padding: 7px;\r\n\r\n    @media(max-width: 550px){\r\n        min-width: 100%;\r\n    }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const FormButton = styled.button`\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #e08e16;\r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 5px;\r\n    font-size: 16px;\r\n    margin: 20px 0;\r\n    cursor: pointer;\r\n\r\n    &:hover{\r\n        background-color: #f19f17;\r\n    }\r\n    &:active{\r\n        background-color: #f29f28;\r\n    }\r\n`","import { FormButton } from \"./styled\";\r\n\r\nconst Button = () => (\r\n    <FormButton>\r\n        Przelicz\r\n    </FormButton>\r\n)\r\n\r\nexport default Button;","import styled from \"styled-components\";\r\n\r\nexport const ResultElement = styled.p`\r\n    font-size: 18px;\r\n    color: #fff;\r\n`","import { ResultElement } from \"./styled\";\r\n\r\nconst Result = ({ result }) => (\r\n    <ResultElement>\r\n        Otrzymasz:&nbsp;\r\n        {result !== undefined && (\r\n            <>\r\n                <strong className=\"form__result\">{(result.afterConversion.toFixed(2))}&nbsp;{result.currency}</strong>\r\n            </>\r\n        )}\r\n    </ResultElement>\r\n);\r\n\r\nexport default Result;","import styled from \"styled-components\";\r\n\r\nexport const ClockElement = styled.p`\r\n    font-family: 'Space Mono', monospace;\r\n    color: #fff;\r\n    font-size: 14px;\r\n    text-align: right;\r\n    margin-bottom: 40px;\r\n\r\n    @media (max-width: 550px){\r\n        text-align: center\r\n    }\r\n`","import { ClockElement } from \"./styled\";\r\nimport { useCurrentDate } from \"./useCurrentDate\";\r\n\r\nconst Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <ClockElement>Dzisiaj jest {date}</ClockElement>\r\n    )\r\n};\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n    \r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId)\r\n        }\r\n    });\r\n\r\n    const actualDate = `${date.toLocaleString(undefined,\r\n        {\r\n            weekday: \"long\",\r\n            hour: \"2-digit\",\r\n            minute:\"2-digit\",\r\n            second: \"2-digit\",\r\n            day: \"numeric\",\r\n            month: \"long\"\r\n        }\r\n    )}`;\r\n    return actualDate;\r\n}\r\n","export const currencies = [\r\n    {   \r\n        summary: \"EUR\", \r\n        name: \"Euro\", \r\n        rate: 4.54,\r\n    },\r\n    {\r\n        summary: \"USD\", \r\n        name: \"Dolar Amerykański\", \r\n        rate: 3.79,\r\n    },\r\n    {\r\n        summary: \"GBP\", \r\n        name: \"Funt Szterling\", \r\n        rate: 5.22,\r\n    }\r\n]","import { FormElement, FormFieldset, FormLegend, FormParagraph, FormSpan, FormInput, FormSelect } from \"./styled\"\r\nimport Button from \"../Button\"\r\nimport Result from \"../Result\"\r\nimport Clock from \"../Clock\"\r\nimport { useState } from \"react\"\r\nimport { currencies } from \"../currencies\"\r\n\r\nconst Form = ({ calculateResult, result }) => {\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [currency, setCurrency] = useState(currencies[0].summary)\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault()\r\n        calculateResult(amount, currency)\r\n    };\r\n\r\n    return (\r\n        <FormElement onSubmit={onFormSubmit}>\r\n            <FormFieldset>\r\n            <>\r\n            <FormLegend>Kalkulator Walut</FormLegend>\r\n            <Clock/>\r\n            </>\r\n                <FormParagraph>\r\n                    <label>\r\n                        <FormSpan>\r\n                            Podaj kwotę w PLN*:\r\n                        </FormSpan>\r\n                        <FormInput\r\n                            value={amount}\r\n                            onChange={({ target }) => setAmount(target.value)}\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"1\"\r\n                            required\r\n                            placeholder=\"Podaj kwotę\" />\r\n                    </label>\r\n                </FormParagraph>\r\n                <FormParagraph>\r\n                    <label>\r\n                        <FormSpan>\r\n                            Wymieniam na:\r\n                        </FormSpan>\r\n                        <FormSelect\r\n                            value={currency}\r\n                            onChange={({ target }) => setCurrency(target.value)}\r\n                        >\r\n                            {currencies.map((currency => (\r\n                                <option\r\n                                    key={currency.summary}\r\n                                    value={currency.summary}\r\n                                >\r\n                                    {currency.name}\r\n                                </option>\r\n                            )))};\r\n                        </FormSelect>\r\n                    </label>\r\n                </FormParagraph>\r\n                <Button />\r\n                <Result result={result} />\r\n            </FormFieldset>\r\n        </FormElement>\r\n    )\r\n};\r\n\r\nexport default Form;","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n    color: #fff;\r\n    text-shadow: 3px 3px 3px #000;\r\n`","import { Title } from \"./styled\";\r\n\r\nconst Header = () => (\r\n    <Title>Internetowy kantor wymiany walut</Title> \r\n)\r\n\r\nexport default Header;","import Form from \"./Form\";\nimport Header from \"./Header\";\nimport {useState} from \"react\";\nimport { currencies } from \"./currencies\";\n\nfunction App() {\n  const [result, setResult] = useState();\n  const calculateResult = (amount, currency) => {\n    const findRate = currencies.find(({summary}) => summary === currency).rate;\n\n    setResult({\n      afterConversion: +amount / findRate,\n      currency,\n    });\n  };\n\n  return (\n    <>\n      <Header />\n      <Form calculateResult={calculateResult} result ={result}/>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GlobalStyle } from \"./globalStyles\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle/>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}