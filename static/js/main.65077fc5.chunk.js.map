{"version":3,"sources":["Button/index.js","Result/index.js","Clock/index.js","Introduction/index.js","currencies.js","Form/index.js","Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["Button","className","Result","result","undefined","afterConversion","toFixed","currency","Clock","useState","Date","date","setDate","useEffect","intervalId","setInterval","clearInterval","clock","toLocaleTimeString","actualDate","toLocaleDateString","weekday","day","month","Introduction","currencies","summary","name","rate","Form","calculateResult","amount","setAmount","setCurrency","onSubmit","event","preventDefault","value","onChange","target","type","min","step","required","placeholder","map","Header","App","setResult","findRate","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65077fc5.chunk.js","sourcesContent":["import \"./style.css\"\r\n\r\nconst Button = () => (\r\n    <button className=\"form__button\">\r\n        Przelicz\r\n    </button>\r\n)\r\n\r\nexport default Button;","import \"./style.css\"\r\n\r\nconst Result = ({ result }) => (\r\n    <p className=\"form__paragraph\">\r\n        Otrzymasz:&nbsp;\r\n        {result !== undefined && (\r\n            <>\r\n                <strong className=\"form__result\">{(result.afterConversion.toFixed(2))}&nbsp;{result.currency}</strong>\r\n            </>\r\n        )}\r\n    </p>\r\n);\r\n\r\nexport default Result;","import { useEffect, useState } from \"react\";\r\nimport \"./style.css\"\r\n\r\nconst Clock = () => {\r\n    const [date, setDate] = useState(new Date());\r\n    \r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date())\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId)\r\n        }\r\n    });\r\n\r\n    const clock = `${date.toLocaleTimeString()}`;\r\n    const actualDate = `${date.toLocaleDateString(undefined,\r\n        {\r\n            weekday: \"long\",\r\n            day: \"numeric\",\r\n            month: \"long\"\r\n        }\r\n    )}`;\r\n\r\n    return (\r\n        <p className=\"clock\">Dzisiaj jest {actualDate}, {clock}</p>\r\n    )\r\n};\r\n\r\nexport default Clock;","import \"./style.css\"\r\nimport Clock from \"../Clock\"\r\n\r\n\r\nconst Introduction = () => (\r\n    <>\r\n        <legend className=\"form__legend\">Kalkulator Walut</legend>\r\n        <Clock/>\r\n    </>\r\n)\r\n\r\nexport default Introduction;","export const currencies = [\r\n    {   \r\n        summary: \"EUR\", \r\n        name: \"Euro\", \r\n        rate: 4.54,\r\n    },\r\n    {\r\n        summary: \"USD\", \r\n        name: \"Dolar Amerykański\", \r\n        rate: 3.79,\r\n    },\r\n    {\r\n        summary: \"GBP\", \r\n        name: \"Funt Szterling\", \r\n        rate: 5.22,\r\n    }\r\n]","import \"./style.css\"\r\nimport Button from \"../Button\"\r\nimport Result from \"../Result\"\r\nimport Introduction from \"../Introduction\"\r\nimport { useState } from \"react\"\r\nimport { currencies } from \"../currencies\"\r\n\r\nconst Form = ({ calculateResult, result }) => {\r\n    const [amount, setAmount] = useState(\"\");\r\n    const [currency, setCurrency] = useState(currencies[0].summary)\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault()\r\n        calculateResult(amount, currency)\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <fieldset className=\"form__fieldset\">\r\n                <Introduction />\r\n                <p className=\"form__paragraph\">\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__labelText\">\r\n                            Podaj kwotę w PLN*:\r\n                        </span>\r\n                        <input\r\n                            value={amount}\r\n                            onChange={({ target }) => setAmount(target.value)}\r\n                            className=\"form__field\"\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            step=\"1\"\r\n                            required\r\n                            placeholder=\"Podaj kwotę\" />\r\n                    </label>\r\n                </p>\r\n                <p className=\"form__paragraph\">\r\n                    <label className=\"form__label\">\r\n                        <span className=\"form__labelText\">\r\n                            Wymieniam na:\r\n                        </span>\r\n                        <select className=\"form__field\"\r\n                            value={currency}\r\n                            onChange={({ target }) => setCurrency(target.value)}\r\n                        >\r\n                            {currencies.map((currency => (\r\n                                <option\r\n                                    key={currency.summary}\r\n                                    value={currency.summary}\r\n                                >\r\n                                    {currency.name}\r\n                                </option>\r\n                            )))};\r\n                        </select>\r\n                    </label>\r\n                </p>\r\n                <Button />\r\n                <Result result={result} />\r\n            </fieldset>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default Form;","import \"./style.css\"\r\n\r\nconst Header = () => (\r\n    <h1 className=\"heading\">Internetowy kantor wymiany walut</h1> \r\n)\r\n\r\nexport default Header;","import Form from \"./Form\";\nimport Header from \"./Header\";\nimport {useState} from \"react\";\nimport { currencies } from \"./currencies\";\n\nfunction App() {\n  const [result, setResult] = useState();\n  const calculateResult = (amount, currency) => {\n    const findRate = currencies.find(({summary}) => summary === currency).rate;\n\n    setResult({\n      afterConversion: +amount / findRate,\n      currency,\n    });\n  };\n\n  return (\n    <>\n      <Header />\n      <Form calculateResult={calculateResult} result ={result}/>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}